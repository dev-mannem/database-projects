----------- IA-643: Database Security & Auditing ------------
------------------- FALL 2016 Wednesday ---------------------
------------------------ Project 3 --------------------------

----------------------- TABLE SPACE -------------------------
DROP TABLESPACE IA643_TBS INCLUDING CONTENTS AND DATAFILES CASCADE CONSTRAINTS;

CREATE TABLESPACE IA643_TBS 
DATAFILE 'IA643_dat.dat' SIZE 500K REUSE
AUTOEXTEND ON NEXT 300K MAXSIZE 100M;

------------------------- PROFILE ---------------------------
DROP PROFILE Develop_prof CASCADE;

CREATE PROFILE Develop_prof LIMIT 
SESSIONS_PER_USER          UNLIMITED 
CPU_PER_SESSION            UNLIMITED 
CPU_PER_CALL               3000 
CONNECT_TIME               180 
LOGICAL_READS_PER_SESSION  DEFAULT 
LOGICAL_READS_PER_CALL     1000 
PRIVATE_SGA                15K
COMPOSITE_LIMIT            5000000
FAILED_LOGIN_ATTEMPTS      4
PASSWORD_LIFE_TIME         90
PASSWORD_REUSE_TIME        30
PASSWORD_REUSE_MAX         3
PASSWORD_LOCK_TIME         1
PASSWORD_GRACE_TIME        3;

-------------------------- USERS -----------------------------

------------------------ JOE SMITH ---------------------------

DROP USER JSmith CASCADE;

Create USER JSmith IDENTIFIED BY JSmith
DEFAULT TABLESPACE IA643_TBS
QUOTA 10M ON IA643_TBS
TEMPORARY TABLESPACE TEMP
PROFILE Develop_prof
PASSWORD EXPIRE
ACCOUNT LOCK;

GRANT CONNECT, RESOURCE TO JSmith;

---------------------- SAM HOUSTON ---------------------------
DROP USER SHouston CASCADE;

Create USER SHouston IDENTIFIED BY SHouston
DEFAULT TABLESPACE IA643_TBS
QUOTA 10M ON IA643_TBS
TEMPORARY TABLESPACE TEMP
PROFILE Develop_prof
PASSWORD EXPIRE
ACCOUNT LOCK;

GRANT CONNECT, RESOURCE TO SHouston;

-------------------- STEPHANIE CLARK -------------------------
DROP USER SClark CASCADE;

Create USER SClark IDENTIFIED BY SClark
DEFAULT TABLESPACE IA643_TBS
QUOTA 10M ON IA643_TBS
TEMPORARY TABLESPACE TEMP
PROFILE Develop_prof
PASSWORD EXPIRE
ACCOUNT LOCK;

GRANT CONNECT, RESOURCE TO SClark;

---------------------- BOB JOHNSON --------------------------
DROP USER BJohnson CASCADE;

Create USER BJohnson IDENTIFIED BY BJohnson 
DEFAULT TABLESPACE IA643_TBS
QUOTA 10M ON IA643_TBS
TEMPORARY TABLESPACE TEMP
PROFILE Develop_prof
PASSWORD EXPIRE
ACCOUNT LOCK;

GRANT CONNECT, RESOURCE TO BJohnson;

-------------- ALTER USERS TO UNLOCK ACCOUNT ---------------
ALTER USER JSmith ACCOUNT UNLOCK;
ALTER USER SHouston ACCOUNT UNLOCK;
ALTER USER SClark ACCOUNT UNLOCK;
ALTER USER BJohnson ACCOUNT UNLOCK;

--- ALTER PROFILE AND ADD PASSWORD VERIFICATION FUNCTION ---
ALTER PROFILE Develop_prof LIMIT 
PASSWORD_VERIFY_FUNCTION dd_pwd_fun;

----- THIS FUNCTION SHOULD BE CREATED IN "SYS" ACCOUNT -----
/*
------------ FUNCTION FOR PASSWORD VERIFICATION -------------
CREATE OR REPLACE FUNCTION dd_pwd_fun(USERID_VAR VARCHAR2, NEW_PASSWORD VARCHAR2, OLD_PASSWORD VARCHAR2)
RETURN BOOLEAN AS
USER_ID VARCHAR2(255);
NEW_PWD VARCHAR2(255);
USER_LEN NUMBER(2);
PWD_LEN NUMBER(2);
PWD_LENGTH VARCHAR2(255);
LOWER_CASE VARCHAR2(255);
UPPER_CASE VARCHAR2(255);
NUMERIC VARCHAR2(255);
PWD_MATCH VARCHAR2(255);
BEGIN
PWD_LENGTH := 'FALSE';
LOWER_CASE := 'FALSE';
UPPER_CASE := 'FALSE';
NUMERIC := 'FALSE';
PWD_MATCH := 'FALSE';
USER_ID := USERID_VAR;
NEW_PWD := NEW_PASSWORD;
USER_LEN := LENGTH(USER_ID);
PWD_LEN := LENGTH(NEW_PWD);

------ LENGTH VALIDATION Should be atleast 8 characters length ------
IF PWD_LEN > 7 THEN
PWD_LENGTH := 'TRUE';
END IF;

--- LOWERCASE VALIDATION Should have atleast one lower case letter --
FOR I IN 1..PWD_LEN LOOP
IF REGEXP_INSTR(SUBSTR(NEW_PWD,I,1),'^.*([a-z]+).*$') > 0 THEN
LOWER_CASE := 'TRUE';
END IF;
END LOOP;

--- UPPERCASE VALIDATION Should have atleast one uppercase letter ---
FOR I IN 1..PWD_LEN LOOP
IF REGEXP_INSTR(SUBSTR(NEW_PWD,I,1),'^.*([A-Z]+).*$') > 0 THEN
UPPER_CASE := 'TRUE';
END IF;
END LOOP;

---------- NUMERIC VALIDATION Should have atleast one digit ----------
FOR I IN 1..PWD_LEN LOOP
IF REGEXP_INSTR(SUBSTR(NEW_PWD,I,1),'^.*([0-9]+).*$') > 0 THEN
NUMERIC := 'TRUE';
END IF;
END LOOP;

-- CONSECUTIVE USERNAME MATCH Should not have 3 consecutive charaters of username --
<<LOOP_MATCH>>
FOR I IN 1..(USER_LEN - 2) LOOP
FOR J IN 1..(PWD_LEN - 2) LOOP
IF SUBSTR(UPPER(USER_ID),I,3) = SUBSTR(UPPER(NEW_PWD),J,3) THEN
PWD_MATCH := 'TRUE';
EXIT LOOP_MATCH;
END IF;
END LOOP;
END LOOP;

-------- CHECKING THE ABOVE VALIDATIONS AND RETURNING THE RESULTS ---------
IF PWD_LENGTH = 'TRUE' AND LOWER_CASE = 'TRUE' AND UPPER_CASE = 'TRUE' AND NUMERIC = 'TRUE' AND PWD_MATCH = 'FALSE' THEN
RETURN TRUE;
END IF;

RETURN FALSE;

END;

/
SHOW ERRORS;
*/


